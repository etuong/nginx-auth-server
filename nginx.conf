worker_processes  1;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    upstream react {
        server 127.0.0.1:3001;
        server 127.0.0.1:3002;
        server 127.0.0.1:3003;
        server 127.0.0.1:3004;
    }

    # Change this for your web app
    root   C:\Users\etuon\OneDrive\Documents\Code\nginx-auth-server\client;
    index  index.html index.htm;

    server {
        listen       8080;
        server_name  localhost;

        error_page 401 /login;

        location ~* ^/(|about|contact)$ {
            auth_request /auth;
            
            # Pass Set-Cookie headers from the subrequest response back to requester
            auth_request_set $auth_cookie $upstream_http_set_cookie;
            add_header Set-Cookie $auth_cookie;
            auth_request_set $auth_status $upstream_status;

            try_files $uri /index.html;
        }
        
		location / {
			proxy_pass http://react;
		}
		
        location = /auth {
            # Internaly only, /auth can not be accessed from outside
            internal;

            # Internal proxy to auth-server running on port 3000, responses expected from proxy:
            #   2xx response = access allowed via auth_request
            #   401 or 403 response = access denied via auth_request
            #   anything else = error
            proxy_pass http://localhost:3000;

            # Don't pass request body to proxied server, we only need the headers which are passed on by default
            proxy_pass_request_body off;

            # There is no content length since we stripped the request body
            proxy_set_header Content-Length "";

            # Let proxy server know more details of request
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header X-Original-Remote-Addr $remote_addr;
            proxy_set_header X-Original-Host $http_host;
        }

        location ~ ^/(login|logged-in|logout)$ {
            proxy_pass http://localhost:3000;
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header X-Original-Remote-Addr $remote_addr;
            proxy_set_header X-Original-Host $http_host;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    }

    include servers/*;
}
